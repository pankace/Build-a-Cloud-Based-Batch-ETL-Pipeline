name: Deploy ETL Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Enable required APIs (in case they're not already enabled)
      - name: 'Enable APIs'
        run: |
          gcloud services enable cloudbuild.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud services enable storage.googleapis.com
          gcloud services enable bigquery.googleapis.com

      # Build Docker image directly with gcloud
      - name: 'Build Extract Docker Image'
        run: |
          gcloud builds submit \
            --tag=gcr.io/${{ secrets.GCP_PROJECT_ID }}/etl-extract:latest \
            --tag=gcr.io/${{ secrets.GCP_PROJECT_ID }}/etl-extract:${{ github.sha }} \
            --dockerfile=docker/extract/Dockerfile .
          
          echo "EXTRACT_IMAGE=gcr.io/${{ secrets.GCP_PROJECT_ID }}/etl-extract:${{ github.sha }}" >> $GITHUB_ENV

      - name: 'Build Load Docker Image'
        run: |
          gcloud builds submit \
            --tag=gcr.io/${{ secrets.GCP_PROJECT_ID }}/etl-load:latest \
            --tag=gcr.io/${{ secrets.GCP_PROJECT_ID }}/etl-load:${{ github.sha }} \
            --dockerfile=docker/load/Dockerfile .
            
          echo "LOAD_IMAGE=gcr.io/${{ secrets.GCP_PROJECT_ID }}/etl-load:${{ github.sha }}" >> $GITHUB_ENV

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0
          terraform_wrapper: false

      # Create Terraform variables file
      - name: Create Terraform variable files
        run: |
          cd ${{ github.workspace }}/terraform
          
          cat > terraform.tfvars << EOF
          project_id = "${{ secrets.GCP_PROJECT_ID }}"
          project_number = "${{ secrets.GCP_PROJECT_NUMBER }}"
          extract_image = "${{ env.EXTRACT_IMAGE }}"
          load_image = "${{ env.LOAD_IMAGE }}"
          region = "${{ secrets.GCP_REGION || 'us-central1' }}"
          bucket_name = "${{ secrets.GCS_BUCKET_NAME || 'etl-data-bucket' }}"
          dataset_id = "${{ secrets.BIGQUERY_DATASET_ID || 'etl_dataset' }}"
          table_id = "${{ secrets.BIGQUERY_TABLE_ID || 'posts' }}"
          EOF
          
          cat terraform.tfvars

      # Initialize Terraform
      - name: Terraform Init
        working-directory: ${{ github.workspace }}/terraform
        run: |
          terraform init

      # Validate Terraform
      - name: Terraform Validate
        working-directory: ${{ github.workspace }}/terraform
        run: |
          terraform validate
          
      # Plan Terraform changes
      - name: Terraform Plan
        working-directory: ${{ github.workspace }}/terraform
        run: |
          terraform plan -out=tfplan

      # Apply Terraform changes
      - name: Terraform Apply
        working-directory: ${{ github.workspace }}/terraform
        run: |
          terraform apply -auto-approve tfplan